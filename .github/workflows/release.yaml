# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: release
on:
  push:
    branches:
      - master
  workflow_dispatch: {}
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      checks: write
    outputs: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          always-auth: true
          cache: yarn
      - id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: snok/install-poetry@v1
        with:
          installer-parallel: true
      - name: Install poetry dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: bump version
        run: |-
          yarn bump
          poetry version $(cat dist/version.txt | tr -s '
          ')
      - name: build
        run: poetry build
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - name: Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
        run: |-
          tar -czf dist.tar.gz dist
          errout=$(mktemp); gh release create $(cat dist/releasetag.txt) dist.tar.gz -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q "Release.tag_name already exists" $errout; then cat $errout; exit $exitcode; fi
      - name: Publish
        run: poetry publish -r dh_repo
